<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>SuperDoge - The Crypto Superhero</title>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
  />
  <link rel="stylesheet" href="assets/styles.css" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <style>
    body {
      background: linear-gradient(to bottom right, #0f0f0f, #1a1a1a);
      color: #fff;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .hero {
      background: url('assets/superdoge-bg.jpg') center/cover no-repeat;
      padding: 100px 0;
      text-align: center;
    }
    .hero h1 {
      font-size: 4rem;
      color: #ffd700;
      text-shadow: 2px 2px 8px #000;
    }
    .hero p {
      max-width: 800px;
      margin: 1rem auto 0;
      font-size: 1.25rem;
    }
    .section-title {
      border-bottom: 2px solid #ffd700;
      display: inline-block;
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
    }
    .press-logos {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;
      padding: 1rem;
      background-color: #e6e6e6;
      border-radius: 12px;
      transition: background-color 0.3s;
    }
    .press-logos img {
      height: 50px;
      vertical-align: middle;
      background-color: #fff;
      padding: 6px;
      border-radius: 6px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .press-logos a:hover img {
      transform: scale(1.15);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }
    footer {
      background: #111;
      padding: 2rem 0;
    }

    /* Stats container and text snug */
    #stats {
      max-width: 900px;
      margin: 0 auto;
    }
    #stats .row > div {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    /* Hover effect for volume and burned counters */
    .counter-hover:hover {
      cursor: pointer;
      transform: scale(1.1);
      transition: transform 0.3s ease;
      color: #ffd700;
      text-shadow: 0 0 8px #ffd700;
    }

    /* Explosion "hit" effect */
    @keyframes hitPulse {
      0% {
        transform: scale(1);
        color: #fff;
        text-shadow: none;
      }
      50% {
        transform: scale(1.3);
        color: #ff3300;
        text-shadow: 0 0 12px #ff3300;
      }
      100% {
        transform: scale(1);
        color: #fff;
        text-shadow: none;
      }
    }

    .hit-effect {
      animation: hitPulse 0.8s ease-in-out;
    }
  </style>
</head>
<body>
  <section class="hero">
    <div class="container">
      <h1>SuperDoge</h1>
      <p class="lead">The First Ever Charity Crypto Superhero — Est. 2021</p>
      <p>
        SuperDoge is a deflationary token that started with 1,000,000,000 tokens
        in 2021. 100% of the supply is in circulation with no vesting period.
        Every transaction includes a 6% tax: 2% is permanently burned, 2% is
        redistributed to holders, and 2% funds the Foundation — supporting
        liquidity, charity, and community growth.
      </p>
    </div>
  </section>

  <div class="container py-5">
    <section id="stats" class="mb-5">
      <h2 class="section-title">Live Token Stats</h2>
      <div class="row g-4 text-center mb-4">
        <div class="col-md-4">
          <h4>Total Supply</h4>
          <p id="totalSupplyDisplay" class="fs-4">Loading...</p>
        </div>
        <div class="col-md-4">
          <h4>Total Burned</h4>
          <p id="burnedSupply" class="fs-4">Loading...</p>
        </div>
        <div class="col-md-4">
          <h4>Donated to Charity</h4>
          <p id="donationUSD" class="fs-4">$Loading...</p>
        </div>
      </div>
      <div class="text-center">
        <h4
          id="volumeLabel"
          class="text-light counter-hover"
          title="Token Volume in the Last 30 Days"
          style="margin-bottom: 0.3rem;"
        >
          30-Day Volume: <span id="volume30Days">Loading...</span>
        </h4>
        <h4
          id="burnLabel"
          class="text-warning counter-hover"
          title="Tokens Permanently Burned in the Last 30 Days"
        >
          30-Day Burned: <span id="burn30Days">Loading...</span>
        </h4>
      </div>
    </section>

    <section class="mb-5">
      <h2 class="section-title">How to Buy</h2>
      <ol>
        <li>Download MetaMask or Trust Wallet.</li>
        <li>Buy and send BNB to your wallet.</li>
        <li>
          Go to
          <a
            href="https://pancakeswap.finance/swap?outputCurrency=0x622a1297057ea233287ce77bdbf2ab4e63609f23"
            target="_blank"
            >PancakeSwap</a
          >.
        </li>
        <li>
          Paste this contract:
          <code>0x622A1297057ea233287ce77bdBF2AB4E63609F23</code>
        </li>
        <li>Set slippage to 6%, then swap BNB for SUPDOG.</li>
      </ol>
    </section>

    <section class="mb-5">
      <h2 class="section-title">About SuperDoge</h2>
      <p>
        SuperDoge launched in 2021 as a meme coin inspired by Dogecoin and Superman
        — with a mission to fund real charities.
      </p>
      <ul>
        <li>💥 6% transaction tax: 2% burn, 2% holders, 2% to the SuperDoge Foundation</li>
        <li>🔥 Over <strong>100M+ SUPDOG</strong> burned and counting</li>
        <li>🛠️ Foundation supports charity, listings, and development</li>
        <li>🪙 100% circulating, no vesting period</li>
        <li>🛡️ Certik-audited smart contract</li>
        <li>🌎 Over 7000 holders</li>
        <li>🔐 Over 215 BNB+ Liquidity is Locked under smart contract for 75 years</li>
        <li>📰 Featured in major media:</li>
      </ul>
      <div class="press-logos text-center my-4">
        <a
          href="https://www.cnbc.com/2021/05/03/kelly-evans-taking-crypto-seriously.html"
          target="_blank"
          ><img src="assets/cnbc.png" alt="CNBC" /></a
        >
        <a
          href="https://financialpost.com/globe-newswire/superdoge-meme-coin-launches-reaches-13m-market-cap-in-first-48-hours-worlds-first-crypto-superhero-coin-donates-2-of-all-transactions-to-various-charities-via-smart-contract-150000-already-do"
          target="_blank"
          ><img src="assets/financialpost.png" alt="Financial Post" /></a
        >
        <a
          href="https://www.bloomberg.com/news/features/2021-05-20/crypto-market-prices-ass-coin-superdoge-billionaires-prosper-and-fall"
          target="_blank"
          ><img src="assets/bloomberg.png" alt="Bloomberg" /></a
        >
      </div>
      <p>💰 Donated 836.34 BNB + growing, tracked on-chain</p>
    </section>

    <footer class="text-center">
      <p>&copy; 2025 SuperDoge.org — Rebuilding the Crypto Superhero</p>
      <p><a href="stats.html" class="text-info">Advanced Stats Page</a></p>
    </footer>
  </div>

  <script>
    const apiKey = "QRQ3R8MI37HB9HXIJ22YQ9CC734R28SM1S";
    const contract = "0x622a1297057ea233287ce77bdbf2ab4e63609f23";
    const initialTotalSupply = 1000000000;

    // Utility function for counting up with delay and easing
    function animateCount(element, start, end, duration, decimals = 0) {
      return new Promise((resolve) => {
        let startTime = null;
        function step(timestamp) {
          if (!startTime) startTime = timestamp;
          const progress = Math.min((timestamp - startTime) / duration, 1);
          const value =
            start + (end - start) * easeOutCubic(progress);
          element.textContent =
            value.toLocaleString(undefined, {
              minimumFractionDigits: decimals,
              maximumFractionDigits: decimals,
            });
          if (progress < 1) {
            requestAnimationFrame(step);
          } else {
            resolve();
          }
        }
        requestAnimationFrame(step);
      });
    }
    function easeOutCubic(t) {
      return 1 - Math.pow(1 - t, 3);
    }

    async function fetchTokenSupply() {
      try {
        const res = await fetch(
          `https://api.bscscan.com/api?module=stats&action=tokensupply&contractaddress=${contract}&apikey=${apiKey}`
        );
        const data = await res.json();
        return parseFloat(data.result) / 1e9;
      } catch {
        return initialTotalSupply; // fallback
      }
    }

    async function fetchBurnAndVolume30Days() {
      const now = Math.floor(Date.now() / 1000);
      const thirtyDaysAgo = now - 30 * 24 * 60 * 60;
      let totalBurned = 0;
      let totalVolume = 0;
      let page = 1;
      const offset = 100;
      let keepGoing = true;

      while (keepGoing && page <= 10) {
        const url = `https://api.bscscan.com/api?module=account&action=tokentx&contractaddress=${contract}&page=${page}&offset=${offset}&sort=desc&apikey=${apiKey}`;
        try {
          const res = await fetch(url);
          const data = await res.json();

          if (!data.result || data.result.length === 0) break;

          for (const tx of data.result) {
            const time = parseInt(tx.timeStamp);
            if (time < thirtyDaysAgo) {
              keepGoing = false;
              break;
            }
            const amount = parseFloat(tx.value) / 1e9;
            totalVolume += amount;
            totalBurned += amount * 0.02;
          }

          if (data.result.length < offset) break;
          page++;
        } catch {
          break;
        }
      }

      return {
        burned: totalBurned,
        volume: totalVolume,
      };
    }

    function hitEffect(element) {
      element.classList.add('hit-effect');
      setTimeout(() => element.classList.remove('hit-effect'), 800);
    }

    async function main() {
      // Fetch current supply & 30d stats in parallel
      const [currentSupply, { burned: burn30Raw, volume: volume30Raw }] =
        await Promise.all([fetchTokenSupply(), fetchBurnAndVolume30Days()]);

      // Round numbers for display
      const currentSupplyRounded = Math.round(currentSupply);
      const burn30Days = Math.round(burn30Raw);
      const volume30Days = Math.round(volume30Raw);

      // Immediately show Total Supply, Burned & Donation (static first)
      const totalSupplyEl = document.getElementById('totalSupplyDisplay');
      const burnedSupplyEl = document.getElementById('burnedSupply');
      const donationEl = document.getElementById('donationUSD');

      // Total burned so far (current supply subtracted from initial)
      let totalBurned = Math.round(initialTotalSupply - currentSupply);

      totalSupplyEl.textContent = currentSupplyRounded.toLocaleString();
      burnedSupplyEl.textContent = totalBurned.toLocaleString();
      donationEl.textContent = `$${Math.round((836.34 + 18.88) * 650).toLocaleString()}`;

      // Animate the 30-day Volume and Burned counters
      const volumeEl = document.getElementById('volume30Days');
      const burnEl = document.getElementById('burn30Days');

      // Animate 30-day volume count
      await animateCount(volumeEl, 0, volume30Days, 3500);

      // Animate 30-day burned count
      await animateCount(burnEl, 0, burn30Days, 3500);

      // After 30-day burned count finishes, animate hit effect & adjust totals
      // Hit effect on burn30Days text
      hitEffect(burnEl);

      // Animate total supply decreasing by burn30Days (over ~2.5s)
      const newSupply = currentSupplyRounded - burn30Days;
      await animateCount(totalSupplyEl, currentSupplyRounded, newSupply, 2500);

      // Animate total burned increasing by burn30Days
      const newBurnedTotal = totalBurned + burn30Days;
      await animateCount(burnedSupplyEl, totalBurned, newBurnedTotal, 2500);

      // Optional: small hit effect on Total Supply and Total Burned to emphasize update
      hitEffect(totalSupplyEl);
      hitEffect(burnedSupplyEl);
    }

    main();
  </script>
</body>
</html>
